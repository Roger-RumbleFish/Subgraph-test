type Block @entity {
  id: ID!
  number: BigInt!
  hash: Bytes
}

type Reserve @entity {
  id: ID!
  address: Bytes!
  symbol: String!
  decimals: BigInt!
  aTokenAddress: Bytes!
  variableDebtTokenAddress: Bytes!
  stableDebtTokenAddress: Bytes!
  interestRateStrategyAddress: Bytes!
  variableBorrowIndex: BigInt
  availableLiquidity: BigInt
  totalStableDebt: BigInt
  totalVariableDebt: BigInt
  ltv: BigInt
  liquidityThreshold: BigInt
  liquidityBonus: BigInt
  isActive: Boolean
  isFrozen: Boolean
  isBorrowingEnable: Boolean
  isStableBorrowingEnable: Boolean
  reserved: BigInt
  liquidityIndex: BigInt
  reservedFactory: BigInt
  liquidityRate: BigInt
  variableBorrowRate: BigInt
  stableBorrowRate: BigInt
  lastUpdateTimestamp: BigInt
  depositCap: BigInt
  borrowCap: BigInt
}

type DIAPrice @entity {
  id: ID!
  symbol: String
  rate: BigInt
  timestamp: BigInt
}

type Registry @entity {
  id: ID!
  reserves: [Reserve!]
  hadoukenOracle: Bytes!
}

type PoolToken @entity {
  id: ID!
  decimals: BigInt!
  symbol: String!
  address: Bytes!
  isAToken: Boolean!
  isStableDebt: Boolean!
  isVariableDebt: Boolean!
}

type TokenBalance @entity {
  id: ID!
  tokenAddress: Bytes!
  walletAddress: Bytes!
  balance: BigInt!
  updatedAt: BigInt!
}

type DepositAsset @entity {
  id: ID!
  TokenBalance: TokenBalance!
  isCollateral: Boolean!
}

type User @entity {
  id: ID!
  ltv: BigInt
  currentLiquidationThreshold: BigInt
  updatedAt: BigInt
  depositAssets: [DepositAsset!]
}